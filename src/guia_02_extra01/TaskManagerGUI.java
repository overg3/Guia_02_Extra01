/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guia_02_extra01;

import javax.swing.DefaultListModel;
import javax.swing.border.EmptyBorder;

/**
 *
 * @author liquiD
 */
public class TaskManagerGUI extends javax.swing.JFrame {

    private DefaultListModel<Tarea> listModel_all = new DefaultListModel<>();
    private DefaultListModel<Tarea> listModel_done = new DefaultListModel<>();
    private DefaultListModel<Tarea> listModel_incomplete = new DefaultListModel<>();

    public TaskManagerGUI() {
        initComponents();
        cargarTareas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rightPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tareasList = new javax.swing.JList<>();
        filtroCombo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        leftPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        textoField = new javax.swing.JTextField();
        agregarButton = new javax.swing.JButton();
        eliminarButton = new javax.swing.JButton();
        borrarTodoButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mis Tareas");
        setResizable(false);

        rightPanel.setBorder(borderSpace);

        tareasList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tareasList);

        filtroCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todas las tareas", "Tareas completadas", "Tareas pendientes" }));
        filtroCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                filtroComboItemStateChanged(evt);
            }
        });

        jLabel2.setText("Filtrar por:");

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(filtroCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(rightPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))
                .addContainerGap())
        );
        rightPanelLayout.setVerticalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filtroCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(rightPanel, java.awt.BorderLayout.EAST);

        leftPanel.setBorder(borderSpace);

        jLabel1.setText("Ingrese su tarea:");

        textoField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoFieldActionPerformed(evt);
            }
        });

        agregarButton.setText("Agregar Tarea");
        agregarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarButtonActionPerformed(evt);
            }
        });

        eliminarButton.setText("Eliminar Tarea");

        borrarTodoButton.setText("Borrar Todo");

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(leftPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(textoField, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(leftPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(agregarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(eliminarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(borrarTodoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(agregarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(eliminarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(borrarTodoButton)
                .addContainerGap(140, Short.MAX_VALUE))
        );

        getContentPane().add(leftPanel, java.awt.BorderLayout.LINE_START);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void agregarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarButtonActionPerformed

        String textoTarea = textoField.getText().trim();

        if (!textoTarea.isEmpty()) {
            listModel_all.addElement(new Tarea(textoTarea));
            textoField.setText("");
        }
        textoField.setText("");
        textoField.requestFocus();
    }//GEN-LAST:event_agregarButtonActionPerformed

    private void textoFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoFieldActionPerformed

        agregarButtonActionPerformed(evt);

    }//GEN-LAST:event_textoFieldActionPerformed

    private void filtroComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_filtroComboItemStateChanged
        
        int selectedCombo = filtroCombo.getSelectedIndex();

        switch (selectedCombo) {
            case 0:
                tareasList.setModel(listModel_all);
                break;
            case 1:
                tareasList.setModel(listModel_done);
                break;
            case 2:
                tareasList.setModel(listModel_incomplete);
                break;
            default:
                break;
        }
    }//GEN-LAST:event_filtroComboItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarButton;
    private javax.swing.JButton borrarTodoButton;
    private javax.swing.JButton eliminarButton;
    private javax.swing.JComboBox<String> filtroCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JList<Tarea> tareasList;
    private javax.swing.JTextField textoField;
    // End of variables declaration//GEN-END:variables

    private EmptyBorder borderSpace = new EmptyBorder(20, 20, 20, 20);

//    private DefaultListModel<Tarea> listModel = new DefaultListModel<>();
    private void cargarTareas() {

        tareasList.setModel(listModel_all);

        listModel_all.addElement(new Tarea("Hacer la cama"));
        listModel_all.addElement(new Tarea("Comprar panqueques"));
        listModel_all.addElement(new Tarea("Comprar munici√≥n 9mm"));
        listModel_all.addElement(new Tarea("Armar bomba nuclear"));
        listModel_all.addElement(new Tarea("Iniciar el apocalipsis"));
        listModel_all.addElement(new Tarea("Pasear al perro", true));
        listModel_all.addElement(new Tarea("Comprar cigarrillos", true));
        listModel_all.addElement(new Tarea("Conquistar el mundo", true));
        listModel_all.addElement(new Tarea("Contar ovejas", true));
        listModel_all.addElement(new Tarea("Enderezar una torre de pizza", true));

        listModel_done = listModel_all;
        listModel_incomplete = listModel_all;

        for (int i = 0; i < listModel_done.getSize(); i++) {
            if (!listModel_done.getElementAt(i).isIsDone()) {
                listModel_done.remove(i);
            }
        }

        for (int i = 0; i < listModel_incomplete.getSize(); i++) {
            if (listModel_incomplete.isEmpty()) {
                listModel_incomplete.remove(i);
            }
        }

    }

}
